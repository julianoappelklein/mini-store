{"version":3,"file":"mini-store.browser.js","sources":["../src/index.ts","../src/browser-inject.ts"],"sourcesContent":["export interface SubscriberOptions<T, R> {\n  selector?: (state: T) => R;\n  comparer?: (a: R, b: R) => boolean;\n  emitOnSubscribe?: boolean;\n}\n\nexport interface UpdateOptions {\n  mode?: 'merge' | 'full';\n}\n\nexport interface Subscriber<T, R> {\n  selector: (state: T) => R;\n  lastValue: R;\n  callback: (newValue: R, prevValue: R | null) => void;\n  comparer: (a: R, b: R) => boolean;\n}\n\nexport class SimpleStore<T = any> {\n  private _subscribers = new Set<Subscriber<T, any>>();\n  private _defaultComparer = <R>(a: R, b: R): boolean => a === b;\n  private _defaultSelector = <R>(state: T): R => state as unknown as R;\n  \n  public state: T;\n  public emitOnSubscribe: boolean = true;\n\n  constructor(state: T) {\n    this.state = state;\n  }\n\n  subscribe<R = T>(\n    callback: (newValue: R, prevValue: R | null) => void,\n    options: SubscriberOptions<T, R> = {}\n  ): () => void {\n    const { selector: argumentSelector, comparer: argumentComparer, emitOnSubscribe } = options;\n\n    const selector = argumentSelector ? (state: T): R => {\n      try {\n        return argumentSelector(state);\n      } catch (error) {\n        console.error('Error in selector:', error, state);\n        return null as R;\n      }\n    } : this._defaultSelector;\n\n    const comparer = argumentComparer ? (a: R, b: R): boolean => {\n      try {\n        return argumentComparer(a, b);\n      } catch (error) {\n        console.error('Error in comparer:', error, a, b);\n        return false; // treat as changed\n      }\n    } : this._defaultComparer;\n    \n    const subscriber: Subscriber<T, R> = {\n      selector,\n      lastValue: selector(this.state),\n      callback,\n      comparer\n    };\n    \n    this._subscribers.add(subscriber);\n    \n    if (emitOnSubscribe !== undefined ? emitOnSubscribe : this.emitOnSubscribe) {\n      callback(subscriber.lastValue, null);\n    }\n    \n    return () => {\n      this._subscribers.delete(subscriber);\n    };\n  }\n\n  update(stateOrFunction: Partial<T> | T | ((state: T) => T), options: UpdateOptions = {}): void {\n    console.log('Updating state:', stateOrFunction);\n    \n    const { mode = 'merge' } = options;\n    let newState: T;\n\n    if (typeof stateOrFunction === 'function') {\n      newState = (stateOrFunction as (state: T) => T)(this.state);\n    } else if (mode === 'merge') {\n      newState = { ...this.state as any, ...stateOrFunction as any } as T;\n    } else if (mode === 'full') {\n      newState = stateOrFunction as T;\n    } else {\n      throw new Error(`Unknown update mode: ${mode}`);\n    }\n\n    this.state = newState;\n\n    this._subscribers.forEach((subscriber) => {\n      try {\n        const prevValue = subscriber.lastValue;\n        const newValue = subscriber.selector(this.state);\n        const comparerResult = subscriber.comparer(prevValue, newValue);        \n        \n        if (!comparerResult) {\n          subscriber.lastValue = newValue;\n          subscriber.callback(newValue, prevValue);\n        }\n      } catch (err) {\n        console.error('Error in subscriber callback:', err);\n      }\n    });\n  }\n}\n\nexport default SimpleStore;\n","import { SimpleStore } from './index.js';\n\n// Inject SimpleStore directly into the browser window object\ndeclare global {\n  interface Window {\n    SimpleStore: typeof SimpleStore;\n  }\n}\n\nif (typeof window !== 'undefined') {\n  window.SimpleStore = SimpleStore;\n}\n\nexport { SimpleStore };\n"],"names":[],"mappings":"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"}